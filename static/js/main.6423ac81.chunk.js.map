{"version":3,"sources":["components/Card.js","components/Cards.js","components/header.js","components/Asidecard.js","data.js","components/App.js","serviceWorker.js","index.js"],"names":["Card","props","console","log","className","src","thumbnail","image_url","alt","name","comments_count","tagline","onClick","updateCount","votes_count","Cards","title","posts","map","post","Header","width","height","viewBox","xmlns","fill","fill-rule","d","placeholder","UserInfo","imgsrc","Asidecard","profileSrc","target","href","App","updatedData","state","setState","fetch","method","headers","then","res","json","data","catch","error","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6423ac81.chunk.js","sourcesContent":["import React from 'react';\nexport function Card(props)\n{\n  console.log(\"props in card\",props)\n  return (\n\n    <div className=\"flex card\">\n      <div className=\"flex\">\n        <img className=\"img\" src={props.thumbnail.image_url} alt={props.name}></img>\n        <div className=\"description\">\n          <h3 className=\"heading\">{props.name}</h3>\n          \n         <div>\n            <button className=\"btn\">{props.comments_count}</button>\n           <span>{props.tagline}</span>\n          </div>\n        </div>\n      </div>\n      <button className=\"up\" onClick={() => props.updateCount(props.votes_count)}>\n        {props.votes_count}\n      </button>\n\n    </div>);\n}\n","import React from 'react';\nimport { Card } from './Card';\nexport function Cards(props)\n{\n  return (\n    <div>\n      <h1 className=\"title\">{props.title}</h1>\n      <div className=\"main-card\">\n        {props.posts.map(post => <Card {...post} updateCount={props.updateCount} />)}\n      </div>\n    </div>\n  );\n}\n\n\n\n","import React from 'react';\nexport function Header(props)\n{\n    return (\n        <div className=\"header\">\n            <div className=\"container flex\">\n                <div className=\"flex\">\n                    <a className=\"logo\">\n                        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20 8.954 0 20 0s20 8.954 20 20\" fill=\"#DA552F\"></path><path d=\"M22.667 20H17v-6h5.667a3 3 0 0 1 0 6m0-10H13v20h4v-6h5.667a7 7 0 1 0 0-14\" fill=\"#FFF\"></path></g></svg>\n                    </a>\n                    <input className=\"input-search flex-item-center\" placeholder=\"Discover your next favorite thing...\" />\n                    <ul className=\"flex flex-item-center\">\n                        <li>Deals</li>\n                        <li>Jobs</li>\n                        <li>Makers</li>\n                        <li>Radio</li>\n                        <li>Ship</li>\n                        <li>...</li>\n                    </ul>\n\n                </div>\n                <div className=\"flex-item-center\">\n                    <button className=\"btn btn-white\">LOG IN</button>\n                    <button className=\"btn btn-red\">SIGN UP</button>\n                </div>\n\n            </div>\n\n        </div>\n    );\n}","import React from 'react';\nfunction UserInfo(props)\n{\n    return (\n        <div >\n            <img className=\"maker\" src={props.imgsrc}></img>\n        </div>\n    )\n}\n\nexport function Asidecard(props)\n{\n    return (\n        <div>\n\n            <div className=\"aside-card-cointainer\">\n                <div>\n                    <h1 className=\"title\">{props.title}</h1>\n                    <div className=\"aside-card\">\n                        <div className=\"flex flex-wrap\">\n                            {props.profileSrc.map(imgsrc => <UserInfo {...imgsrc} />)}\n                        </div>\n                        <div className=\"line\"></div>\n                        <div className=\"maker-card-btn\">\n                            <a>START WORKING NOW</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"aside-card-cointainer\">\n                <div>\n                    <h1 className=\"title\">Product Hunt Radio</h1>\n                    <a target=\"_blank\" href=\"https://www.producthunt.com/radio?play=1&utm_source=Product+Hunt&utm_campaign=homepage\">\n\n                        <div className=\"media-card\">\n                            <p className=\"media-card-title\">How to grow and monetize communities with Jill Salzman</p>\n\n                        </div>\n                    </a>\n                </div>\n            </div>\n            <div className=\"aside-card-cointainer\">\n                <div>\n                    <h1 className=\"title\">Newsletter</h1>\n                    <div className=\"newsletter\">\n                        <img className=\"newsletter-img\" src=\"https://ph-files.imgix.net/742f9303-ea31-4ab8-89fa-664e6be69029?auto=format&auto=compress&codec=mozjpeg&cs=strip\" />\n                        <h1 className=\"card-text\">Remote teams, this is for you</h1>\n                        <div className=\"line\">\n\n                        </div>\n                        <h2 className=\"card-text\">Get the best new products in your inbox, every day</h2>\n                        <div>\n                            <input className=\"input-search\" placeholder=\"Your email\" />\n                        </div>\n                        <button className=\"btn btn-red btn-full\">SUBSCRIBE</button>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n\n    );\n}","\nexport const names = [{ name: \"Open Peeps\", description: \"A hand-drawn illustration library.\", tags: [\"Design Tools\", \"productivity\"], src: \"https://ph-files.imgix.net/719fe138-8598-46ec-8259-ef17ba46c0c2?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=80&h=80&fit=crop\", up: 1233, count: 222 },\n{ name: \"InVideo\", description: \"Create insanely good social videos in under 10 mins\", tags: [\"Design Tools\", \"productivity\"], src: \"https://ph-files.imgix.net/9093cadf-bc92-45d3-97ea-a74d41455587?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=80&h=80&fit=crop\", up: 2323, count: 242 },\n{ name: \"Phone Call Translator\", description: \"Translates your voice calls into 29 languages in real-time\", tags: [\"Android\", \"iphone\"], src: \"https://ph-files.imgix.net/76ee2898-6c6c-4d57-86c3-f42b961a97dc?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=80&h=80&fit=crop\", up: 4343, count: 221 }]\n\nexport const profileSrc = [{ imgsrc: \"https://ph-avatars.imgix.net/1456069/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/826276/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/1440175/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/2422879/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/166755/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/1903430/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/2273447/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/17305/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/1126875/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/2097425/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/2245194/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" },\n{ imgsrc: \"https://ph-avatars.imgix.net/2395344/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=30&h=30&fit=crop\" }]","import React from 'react';\nimport './App.css';\nimport { Cards } from './Cards';\nimport { Header } from './header';\nimport { Asidecard } from './Asidecard';\n\n\nimport { profileSrc } from '../data';\n\nclass App extends React.Component\n{\n\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      posts:[]\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.producthunt.com/v1/posts/\",{\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer 0ns-dkfbamLRViMA-xC1CmcaRFBPB_Zoteoweo4Z7Cc\",\n        \"Host\": \"api.producthunt.com\"\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data.posts)\n      this.setState({\n          posts: data.posts\n        }) \n    })\n    .catch(error => console.log(error));\n        \n  }\n\n\n  updateCount = votes_count =>\n  {\n    let updatedData = this.state.posts.map(post =>\n    {\n      if (post.votes_count === votes_count) {\n        post.votes_count = post.votes_count + 1;\n      }\n      return post;\n    });\n    this.setState({ posts: updatedData });\n  };\n\n  render()\n  {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container flex\">\n          {/*<Cards names={names} updateCount={this.updateCount} title=\"Popular this month\" />*/}\n          <Cards posts={this.state.posts} updateCount={this.updateCount} title=\"Popular this month\" />\n\n          <Asidecard title=\"Makers working today\" profileSrc={profileSrc} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}